add cuda timer events
(cuda protips)https://devblogs.nvidia.com/parallelforall/category/cuda-pro-tip/
build basic cuda path tracer
coheleased memory access using float4
use thrust for various datastructures
See if time permits construction on GPU
https://devblogs.nvidia.com/parallelforall/thinking-parallel-part-iii-tree-construction-gpu/
Correct Aliasing issues
use cuda streams
add support for data structures(BVH)
add support for FPS display
profile with nvidia profiler
Make sure no printing inside critical loops
Experiment with different data types
Cleanup code and commented stuff


GUI Design
=>optimize packing data for efficient retrival on GPU
=>Cuda controls(Ray depth,Samples,block size)
Interactive Samples,Interactive Depth
=>Display stuff like kernel execution time,texture mapping
=>Gl controls(Fog)

Report additions
=>Basic GPU implementation(=>recursion overhead avoided with loops)
=>Speedup curves
=>timing data for kernels and total gpu time and cpu comparisions
=>Speedup should be shown with 2-3 methods and graphs to accompany

[DONE]tried texture memory
[DONE]setup cuda and opengl interop
[DONE]Basic RayTracing and Camera Setup
